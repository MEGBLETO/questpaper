[{"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/index.js":"1","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/App.js":"2","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Nav.js":"3","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Firebase.js":"4","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Footer.js":"5","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Join.js":"6","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Map.js":"7","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Home.js":"8","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Login.js":"9","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Registration.js":"10","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Profile.js":"11","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Upload.js":"12","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Offers.js":"13","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/features/Login.js":"14","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/ProtectedRoute.js":"15","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Secondary.js":"16","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Viewer.js":"17","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Prodata.js":"18","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Loader.js":"19","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/features/Token.js":"20","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Membership.js":"21","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/CardForm.js":"22"},{"size":752,"mtime":1637842501251,"results":"23","hashOfConfig":"24"},{"size":2070,"mtime":1637851578505,"results":"25","hashOfConfig":"24"},{"size":4868,"mtime":1637930441550,"results":"26","hashOfConfig":"24"},{"size":601,"mtime":1633337776437,"results":"27","hashOfConfig":"24"},{"size":590,"mtime":1634207666336,"results":"28","hashOfConfig":"24"},{"size":990,"mtime":1633813740351,"results":"29","hashOfConfig":"24"},{"size":852,"mtime":1636638059184,"results":"30","hashOfConfig":"24"},{"size":3821,"mtime":1634179191101,"results":"31","hashOfConfig":"24"},{"size":4198,"mtime":1637926043652,"results":"32","hashOfConfig":"24"},{"size":5014,"mtime":1636666471422,"results":"33","hashOfConfig":"24"},{"size":545,"mtime":1637848972511,"results":"34","hashOfConfig":"24"},{"size":5709,"mtime":1637929896951,"results":"35","hashOfConfig":"24"},{"size":2175,"mtime":1637841136056,"results":"36","hashOfConfig":"24"},{"size":345,"mtime":1635614052192,"results":"37","hashOfConfig":"24"},{"size":461,"mtime":1637231801625,"results":"38","hashOfConfig":"24"},{"size":4329,"mtime":1638305761131,"results":"39","hashOfConfig":"24"},{"size":3041,"mtime":1638197224723,"results":"40","hashOfConfig":"24"},{"size":970,"mtime":1637844198781,"results":"41","hashOfConfig":"24"},{"size":271,"mtime":1637836434050,"results":"42","hashOfConfig":"24"},{"size":343,"mtime":1637842429371,"results":"43","hashOfConfig":"24"},{"size":2824,"mtime":1638376856930,"results":"44","hashOfConfig":"24"},{"size":1374,"mtime":1637859721769,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"tzajdu",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"48"},"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/index.js",[],["103","104"],"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/App.js",["105"],"import React,{useEffect} from 'react'\nimport Login from \"./Pages/Login\";\nimport Home from \"./Pages/Home\";\nimport Registration from \"./Pages/Registration\";\nimport Profile from \"./Pages/Profile\";\nimport Upload from \"./Pages/Upload\"\nimport Offers from \"./Pages/Offers\";\nimport CookieConsent from \"react-cookie-consent\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport { useSelector } from \"react-redux\";\nimport {Route, Switch, useHistory,useLocation } from \"react-router-dom\";\nimport { situation } from \"../src/features/Login\";\nimport { useDispatch } from \"react-redux\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport Secondary from \"./Pages/Secondary\";\nimport Membership from './Pages/Membership';\n\nfunction App() {\n  const loginStatus = useSelector((state) => state.login.value)\n  console.log(loginStatus)\n\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  const location = useLocation();\n  \n  \n  useEffect(() => {\n  const token =  localStorage.getItem('token');\n  if(token){\n    dispatch(situation(true));\n    history.push(location.pathname)\n  }else{\n    dispatch(situation(false));\n  }\n}, [])\n\n\n\n  return (\n    <>\n    <Nav/>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Registration} />\n        <ProtectedRoute path=\"/profile\"  isAuth={loginStatus} component={Profile}/>\n        <ProtectedRoute path=\"/upload\"isAuth={loginStatus} component={Upload}/>\n        <ProtectedRoute path=\"/offers\" isAuth={loginStatus}  component={Offers} />\n        <ProtectedRoute path=\"/secondary\" isAuth={loginStatus} component={Secondary} />\n        <ProtectedRoute path=\"/membership\" isAuth={loginStatus} component={Membership} />\n      </Switch>\n      <CookieConsent location=\"bottom\" style={{ background: \"#2B373B\" }} buttonText=\"Je Comprends !\" debug={true}>Ce site utillise des cookies pour une meilleur experience utillisateurs.</CookieConsent>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Nav.js",["106"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Scrollchor } from \"react-scrollchor\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nconst Nav = () => {\n\n  const loginStatus = useSelector((state) => state.login.value)\n\n\n\n\n  const [click, setClick] = useState(false);\n\n \n  const showSidenav = () => {\n    (setClick(c => (!c)));\n  };\n\n\n  const logOut = () =>{\n    window.localStorage.clear();\n    window.location.href = '/';\n  }\n\n\n  return (\n    <div className=\"bg-gray-800 sticky z-10 top-0 p-4 flex justify-between text-white\">\n      <Scrollchor to=\"#hero\">\n        <Link exact to=\"/\">\n          <h1 className=\"flex-1 font-cookie text-3xl\">QuestPaper</h1>\n        </Link>\n      </Scrollchor>\n\n      <ul \n        className={\n          click\n            ? \"mobilenav sm:flex space-x-3 text-center items-center\"\n            : \"hidden sm:flex  space-x-2 text-center items-center\"\n        }\n      >\n        <li   className=\"hover: cursor-pointer hover:text-red-200 \">\n          <Scrollchor to=\"#hero\">\n            <Link to=\"/\">Home</Link>\n          </Scrollchor>\n        </li>\n\n        {loginStatus &&  <li   className=\"hover: cursor-pointer hover:text-red-200\">\n          <Scrollchor to=\"#about\">\n            <Link exact to=\"/secondary\">\n              Chercher et Telecharger\n            </Link>\n          </Scrollchor>\n        </li> }\n\n        {!loginStatus &&  <li  className={`hover: cursor-pointer hover:text-red-200`}>\n          <Scrollchor to=\"#about\">\n            <Link exact to=\"/\">\n              A propos\n            </Link>\n          </Scrollchor>\n        </li> }\n\n        {loginStatus &&  <li  className=\"hover: cursor-pointer hover:text-red-200\">\n          <Scrollchor to=\"#about\">\n            <Link exact to=\"/profile\">\n              Profile\n            </Link>\n          </Scrollchor>\n        </li> }\n       \n\n\n        {loginStatus &&  <li className=\"hover: cursor-pointer hover:text-red-200\">\n          <Scrollchor to=\"#about\">\n            <Link exact to=\"/offers\">\n            Offers\n            </Link>\n          </Scrollchor>\n        </li> }\n\n        {loginStatus &&  <li className=\"hover: cursor-pointer hover:text-red-200\">\n          <Scrollchor to=\"#about\">\n            <Link exact to=\"/membership\">\n          Souscription\n            </Link>\n          </Scrollchor>\n        </li> }\n\n        {!loginStatus && <li className=\"hover: cursor-pointer hover:text-red-200\">\n          <Scrollchor to=\"#about\">\n            <Link exact to=\"/\">\n              Nos Services\n            </Link>\n          </Scrollchor>\n        </li>}\n\n       {!loginStatus && <li className=\"hover: cursor-pointer hover:text-red-200\">\n          <Scrollchor to=\"#contact\">\n            <Link exact to=\"/\">\n              Contact\n            </Link>\n          </Scrollchor>\n        </li> } \n\n        {!loginStatus &&  <li    className=\"flex hover: cursor-point ser hover:text-red-200\">\n          <Link className=\"flex\" exact to=\"/login\">\n            Se Connecter\n            <div className=\"\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\"\n                />\n              </svg>\n            </div>\n          </Link>\n        </li> }\n\n\n        {loginStatus &&  <li onClick={logOut} className=\"flex hover: cursor-pointer hover:text-red-200\">\n            Se Deconnecter\n            <div className=\"\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\"\n                />\n              </svg>\n            </div>\n        </li> }\n      </ul>\n\n      <div\n        className=\"m-1 flex text-center items-center sm:hidden\"\n        onClick={showSidenav}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"h-6 w-6\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M4 6h16M4 12h16M4 18h16\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Firebase.js",[],"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Footer.js",[],"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Join.js",[],"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Map.js",[],"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Home.js",[],"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Login.js",["107","108"],"import { Link, useHistory, useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { tokenstate } from \"../features/Token\";\n\n//importing my action for the situation\n\nimport { situation } from \"../features/Login\";\n\nconst Login = () => {\n \n\n  const { state } = useLocation();\n  //To implement the user redirection fonctionality\n\n  let history = useHistory();\n\n  const dispatch = useDispatch();\n\n  //getting login data through react hook forms and setting it using usestate\n  const [logindata, setLoginData] = useState();\n\n  //Dealing with the response i get back from the server after the login phase\n  const [message, setMessage] = useState(\"\");\n\n  const { register, handleSubmit } = useForm();\n  const onSubmit = (data) => setLoginData(data);\n\n  //https://questpaper.herokuapp.com/api/user/login\n\n  const postLoginData = async () => {\n    try {\n      const email = await logindata.email;\n      const password = await logindata.password;\n\n      axios\n        .post(\"http://localhost:5000/api/user/login\", {\n          email: email,\n          password: password,\n        })\n        .then((response) => {\n          if (response.data.serverRes === \"success\") {\n            dispatch(situation(true));\n            localStorage.setItem(\"token\", response.data.token);\n            Cookies.set(\"loggedIn\", \"true\");\n            const token = localStorage.getItem(\"token\");\n            dispatch(tokenstate(token));\n            history.push(\"/secondary\");\n          } else {\n            setMessage(response.data.message);\n            history.push(\"/login\");\n          }\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (logindata) {\n      postLoginData();\n    }\n  }, [logindata]);\n\n  return (\n    <div className=\"flex relative flex-col p-4 items-center min-h-screen dark:bg-black\">\n      <div className=\" shadow-lg m-auto\">\n        <div className=\"flex flex-col p-3 bg-gray-500 w-full text-center justify-center\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\" w-1/4 text-white  self-center\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </div>\n\n        <h1 className=\"text-red-800 text-center\">{message}</h1>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"flex flex-col bg-white p-8 justify-center min-h-full \"\n        >\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"email\">\n              Email:\n            </label>\n            <input\n              className=\"p-1 sm:p-2 border-2 w-full\"\n              {...register(\"email\")}\n              required\n              type=\"email\"\n              name=\"email\"\n            />\n          </div>\n\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"password\">\n              Password:\n            </label>\n            <input\n              className=\"p-1 sm:p-2  border-2 w-full\"\n              {...register(\"password\")}\n              required\n              type=\"password\"\n              name=\"password\"\n            />\n          </div>\n\n          <input\n            className=\"cursor-pointer mx-auto my-3 bg-gray-900 text-white p-3\"\n            type=\"submit\"\n            value=\"Se connecter\"\n          />\n\n          <p className=\"p-4 font-cookie text-xl text-center\">\n            Pas Encore Inscrit?{\" \"}\n            <span className=\"text-green-800 hover: cursor-pointer hover:text-red-800\">\n              <Link exact to=\"register\">\n                Inscrivez-vous Maintenant.\n              </Link>\n            </span>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Registration.js",["109","110"],"import React, { useState, useEffect} from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n\n\n\n\n\nconst Registration = () => {\n  const [userData, setUserData] = useState();\n  \n  const [message, setMessage] = useState(\"\");\n  \n  const { register, handleSubmit } = useForm();\n  const onSubmit = (data) => setUserData(data);\n  \n  let history = useHistory();\n  \n  \n  const postData = async () => {\n    if (userData) {\n      console.log(userData)\n      const name = await userData.name;\n      const sirname = await userData.sirname;\n      const email = await userData.email;\n      const password = await userData.password;\n      const confirmPassword = await userData.pwdrepeat;\n      const year = await userData.year;\n\n      axios\n        .post(\"http://localhost:5000/api/user/inscrire\", {\n          sirname: sirname,\n          name: name,\n          email: email,\n          password: password,\n          confirmPassword: confirmPassword,\n          year: year,\n        })\n        .then((response) => {\n          setMessage(response.data);\n         if(response.status == 200){\n            history.push('/login')\n         }\n        });\n    }\n  };\n\n  useEffect(() => {\n    postData();\n  }, [userData]);\n\n  return (\n    <div className=\"flex relative flex-col p-4 items-center min-h-screen  dark:bg-black\">\n      <div className=\"shadow-lg m-auto\">\n      <div className=\"flex flex-col p-3 bg-gray-500 w-full text-center justify-center\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\" w-1/4 text-white  self-center\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        </div>\n        <h1 className=\"text-red-800 text-center\">{message}</h1>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"flex flex-col  bg-white p-8 justify-center min-h-full \"\n        >\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"adresse\">\n              Année d'etude:\n            </label>\n            <select {...register('year')} className=\"p-2\" id=\"year\" name=\"year\">\n              <option value=\"1\">License 1</option>\n              <option value=\"2\">License 2</option>\n              <option value=\"3\">License 3</option>\n              <option value=\"4\">Master 1</option>\n              <option value=\"5\">Master 2</option>\n            </select>\n          </div>\n\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"name\">\n              Sirname:\n            </label>\n            <input\n              className=\"p-2 border-2 w-full\"\n              {...register(\"sirname\")}\n              type=\"text\"\n              name=\"sirname\"\n            />\n          </div>\n\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"name\">\n              Name:\n            </label>\n            <input\n              className=\"p-2 border-2 w-full\"\n              {...register(\"name\")}\n              type=\"text\"\n              name=\"name\"\n            />\n          </div>\n\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"email\">\n              Email:\n            </label>\n            <input\n              className=\"p-2 border-2 w-full\"\n              {...register(\"email\")}\n              type=\"email\"\n              name=\"email\"\n            />\n          </div>\n\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"password\">\n              Mot de Passe:\n            </label>\n            <input\n              className=\"p-2 border-2 w-full\"\n              {...register(\"password\")}\n              type=\"password\"\n              name=\"password\"\n            />\n          </div>\n\n          <div className=\"flex flex-col \">\n            <label className=\"font-bold p-2\" htmlFor=\"password\">\n              Confirmez le Mot de passe:\n            </label>\n            <input\n              className=\"p-2 border-2 w-full\"\n              {...register(\"pwdrepeat\")}\n              type=\"password\"\n              name=\"pwdrepeat\"\n            />\n          </div>\n\n          <input\n            className=\"cursor-pointer mx-auto mt-3 bg-gray-900 text-white p-3\"\n            type=\"submit\"\n            value=\"S'inscrire\"\n          />\n\n          <p className=\"p-5 font-cookie text-xl text-center\">\n            Pas Encore Inscrit?\n            <span className=\"text-green-800 hover: cursor-pointer hover:text-red-800\">\n              <Link to=\"/login\"> Connectez-vous Maintenant.</Link>\n            </span>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Registration;\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Profile.js",["111","112","113","114"],"import React, { useState, useEffect } from \"react\";\nimport { useJwt} from \"react-jwt\";\nimport { useSelector } from \"react-redux\";\nimport Prodata from \"../components/Prodata\";\n\nconst Profile = () => {\n\n  const token = localStorage.getItem(\"token\");\n\n\n  const mydecodedtoken = useJwt(token);\n\n  useEffect(async() => {  \n    const req = await mydecodedtoken\n    if(req){\n\n      console.log(req)\n    }\n \n  }, [token])\n  \n\n  return (\n    <div className=\"\">\n      <Prodata  decodedToken={mydecodedtoken} />\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Upload.js",["115","116","117","118","119","120","121","122","123"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useForm } from \"react-hook-form\";\nimport { useJwt } from \"react-jwt\";\n\n\n\n\nconst Upload = () => {\n\n\n  let history = useHistory()\n\n\n\n  const [donneeform, setDonneeForm] = useState([]);\n\n  const [upconfirm, setupConfirm] = useState();\n\n  const [filename, setFilename] = useState(\"..\");\n\n  //file data to be appended\n  const [file, setFile] = useState();\n\n  //level and speciality data\n\n  const [specialite, setSpecialite] = useState();\n  const [level, setLevel] = useState();\n\n  const { register, handleSubmit , reset} = useForm();\n  const onSubmit = (data) => {\n    setDonneeForm(data)\n    \n    //reset();\n  };\n\n  const [tokenvalue, setToken] = useState();\n  const { decodedToken, isExpired } = useJwt(tokenvalue);\n\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  const [updata, setUpdata]= useState('');\n\n  const sendData = async (formData) => {\n    try {\n      const options = {\n        onUploadProgress: (ProgressEvent) => {\n          const { loaded, total } = ProgressEvent;\n          let percent = Math.floor((loaded * 100) / total);\n          setUpdata(`${loaded}kb of ${total}kb| ${percent}`);\n          if (percent < 100) {\n            setUploadPercentage(percent);\n          }else if(percent = 100){\n            //history.push('/secondary');\n          }\n        },\n      };\n      https://questpaper.herokuapp.com/api/user/upload\n \n      await axios\n        .post(\"http://localhost:5000/api/user/upload\", formData, options)\n        .then((res) => setupConfirm(res.data.message), reset)\n        .catch((err) => console.log(err));\n      setUploadPercentage(100, () => {\n        setTimeout(() => {\n          setUploadPercentage(0);\n        }, 1000);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(uploadPercentage);\n\n  useEffect(async () => {\n    try {\n      if (donneeform) {\n        const { user_email, user_name, user_sirname } = await decodedToken.data;\n        console.log(donneeform.file[0]);\n        setFilename(donneeform.file[0].name);\n        setFile(donneeform.file[0]);\n        setLevel(donneeform.year);\n        setSpecialite(donneeform.specialite);\n\n        const formData = new FormData();\n\n        formData.append(\"name\", filename);\n\n        formData.append(\"user_email\", user_email);\n\n        formData.append(\"subject\", file);\n\n        formData.append(\"year\", level);\n\n        formData.append(\"domaine\", specialite);\n\n        sendData(formData);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [donneeform]);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    setToken(token);\n  }, []);\n\n  return (\n    <div className=\"h-screen p-4 lg:w-1/2 mx-auto\">\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className=\" h-full p-2 flex flex-col justify-evenly\"\n      >\n        <p className=\"text-green-800 text-xl\">{upconfirm}</p>\n        <div className=\"flex flex-col \">\n          <label htmlFor=\"level\">Niveau d'étude:</label>\n          <select\n            {...register(\"year\")}\n            className=\"p-2  bg-gray-500 text-white\"\n            id=\"year\"\n            name=\"year\"\n            required\n          >\n            <option value=\"none\" selected disabled hidden>\n              Renseignez une année d'étude\n            </option>\n            <option value=\"1\">License 1</option>\n            <option value=\"2\">License 2</option>\n            <option value=\"3\">License 3</option>\n            <option value=\"4\">Master 1</option>\n            <option value=\"5\">Master 2</option>\n          </select>\n        </div>\n\n        <div className=\"flex flex-col \">\n          <label htmlFor=\"Specialite\">Specialite:</label>\n          <select\n            {...register(\"specialite\")}\n            className=\"p-2 bg-gray-500 text-white\"\n            id=\"specialite\"\n            name=\"specialite\"\n            required\n          >\n            <option value=\"none\" selected disabled hidden>\n              Renseignez une specialité\n            </option>\n            <option value=\"anglais\">Anglais</option>\n            <option value=\"informatique\">Informatique</option>\n            <option value=\"biologie\">Biologie</option>\n            <option value=\"commerce\">commerce</option>\n            <option value=\"droit\">Droit</option>\n          </select>\n        </div>\n\n        <div className=\"relative h-2/6 flex flex-col \">\n          <input\n            className=\"p-2 shadow-lg cursor-pointer h-5/6 text-white border-2 border-dotted border-gray-300\"\n            type=\"file\"\n            accept=\".pdf\"\n            name=\"subject\"\n            {...register(\"file\")}\n            required\n          />\n          <label htmlFor=\"filelabel\">{filename}</label>\n        </div>\n        {/* progress bar */}\n        <div className=\"relative pt-1\">\n          <div className=\"flex mb-2 items-center justify-between\">\n            <div className=\"text-right\">\n              <span className=\"text-xs font-semibold inline-block text-gray-800\">\n                {uploadPercentage}%\n              </span>\n            </div>\n          </div>\n          <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-gray-300\">\n            <div\n              style={{ width: `${uploadPercentage}%`}}\n              className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-gray-800\"\n            ></div>\n          </div>\n          {updata}\n        </div>\n        <input\n          className=\"p-3 cursor-pointer bg-gray-200 m-3 hover:bg-gray-600\"\n          type=\"submit\"\n          value=\"Upload\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Upload;\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Offers.js",["124","125","126","127"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"../components/Loader\";\nimport { useForm } from \"react-hook-form\";\n\nconst Offers = () => {\n  const [search, setSearch] = useState('frontend');\n  const [offers, setOffers] = useState();\n  const [loading, setisLoading] = useState(true);\n\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const onSubmit = data => setSearch(data.searchitem);\n\n\n\n  const getData = async () => {\n    const req = await axios.get(\n      `https://api.adzuna.com/v1/api/jobs/fr/search/8?app_id=a8d2c594&app_key=16b7abd53d888e1013c9c8735e92b9af&title_only=${search}`,\n    );\n\n    const res = await req.data;\n    if (res) {\n      setisLoading(false);\n      setOffers(res.results);\n      console.log(offers)\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [search]);\n\n  return (loading?<Loader/> :\n    <div className=\"min-h-screen m-4 p-4 sm:w-3/3 mx-auto  flex flex-col justify-items-center\">\n      <div className=\"flex flex-col items-center text-center justify-items-center\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"flex h-2/3 p-3 my-4 mx-1  sm:mx-auto w-full sm:w-1/2 shadow-md  bg-gray-100 justify-center\">\n        <input {...register(\"searchitem\")}  className=\"w-2/3 p-2 outline-none \" type=\"text\" />\n        <input\n          className=\"p-2 cursor-pointer bg-gray-700 hover:bg-gray-500 text-white\"\n          type=\"submit\"\n          name=\"Search\"\n          value=\"Search\"\n        />\n      </form>\n        {offers?.map(item => (\n           <div className=\"flex flex-col p-2 m-3 my-8 border-2 w-full \">\n             <h1 className=\" text-4xl p-2 font-bold\">{item.company.display_name}</h1>\n             <h4 className=\"italic\">{item.location.area}</h4>\n             <h2 className=\"text-xl p-2\">{item.title}</h2>\n             <h3 className=\"text-gray-600\">{item.description}</h3>\n              <h3 className=\"flex justify-center text-center p-2\"><a className=\"text-blue-400 flex flex-col text-center \"target=\"_blank\" href={item.redirect_url}>Consulter l'offre</a></h3>\n           </div>\n         ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Offers;\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/features/Login.js",[],"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/ProtectedRoute.js",["128"],"import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\n\nconst ProtectedRoute = ({isAuth: isAuth, component: Component, ...rest}) => {\n    return (\n       <Route {...rest}  render={(props) =>{\n           if(isAuth === true){\n               return <Component/>\n           }\n           else{\n              return  <Redirect to={{pathname: '/', state: {from: props.location} }} />\n           }\n       }}/>\n    )\n}\n\nexport default ProtectedRoute\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Secondary.js",["129","130","131","132","133"],"import React, { useState, useEffect } from \"react\";\nimport Doc from \"../doc/formulaire.pdf\";\nimport Viewer from \"../components/Viewer\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Secondary = () => {\n  const [docs, setDoc] = useState([]);\n  const [year, setYear] = useState();\n  const [domaine, setDomaine] = useState(\"\");\n\n  const getdocs = async () => {\n    if (domaine && year) {\n      const result = await axios.get(\n        `http://localhost:5000/api/user/files/${domaine}/${year}`\n      );\n      console.log(result.data);\n      setDoc(result.data);\n    }\n  };\n\n  const getAlldocs = async () => {\n    const result = await axios.get(`http://localhost:5000/api/user/files`);\n    console.log(result.data);\n\n    if(result.data){\n\n      setDoc(result.data);\n    }else{\n      setDoc({\"data\" : \"no data found\"});\n    }\n  };\n\n  const getBydomaine = async () => {\n    const result = await axios.get(\n      `http://localhost:5000/api/user/secteur/${domaine}`\n    );\n    if(result.data){\n      setDoc(result.data);\n    }else{\n      setDoc({\"data\" : \"no data found\"});\n    }\n  };\n\n  const getByYear = async () => {\n    if (year) {\n      const result = await axios.get(\n        `http://localhost:5000/api/user/annee/${year}`\n      );\n      if(result.data){\n        setDoc(result.data);\n      }else{\n        setDoc({\"data\" : \"no data found\"});\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (year && domaine) {\n      getdocs();\n    }\n  }, [year, domaine]);\n\n  useEffect(() => {\n    if (!year && !domaine) {\n      getAlldocs();\n    }\n  }, []);\n\n  useEffect(() => {\n    getBydomaine();\n  }, [domaine]);\n\n  useEffect(() => {\n    getByYear();\n  }, [year]);\n\n  return (\n    <div className=\"flex m-3 flex-col items-center  min-h-screen \">\n      <div className=\"relative  w-full m-4 p-3\">\n        <Link\n          className=\"w-1/5 flex justify-center sm: absolute  right-2  -top-4 p-3   bg-gray-400 hover:bg-gray-200\"\n          to=\"/upload\"\n        >\n          <div className=\"flex text-sm\">\n            <p>Upload</p>\n          </div>\n        </Link>\n      </div>\n\n      <div className=\"flex flex-col sm:flex-row w-full p-3 mb-8 bg-gray-800 text-white justify-evenly\">\n        <div>\n          <p className=\"font-bold\">Filtrer Par:</p>\n        </div>\n        <div className=\"flex flex-col \">\n          <label className=\"font-bold p-2\" htmlFor=\"adresse\">\n            Année d'etude:\n          </label>\n          <select\n            onChange={(e) => setYear(e.target.value)}\n            className=\"p-2 text-black\"\n            id=\"year\"\n            name=\"year\"\n          >\n            <option value=\"none\" selected disabled hidden>\n              -------Sélectionner----------\n            </option>\n            <option value=\"1\">License 1</option>\n            <option value=\"2\">License 2</option>\n            <option value=\"3\">License 3</option>\n            <option value=\"4\">Master 1</option>\n            <option value=\"5\">Master 2</option>\n          </select>\n        </div>\n\n        <div className=\"flex flex-col \">\n          <label className=\"font-bold p-2\" htmlFor=\"Specialite\">\n            Specialite:\n          </label>\n          <select\n            onChange={(e) => setDomaine(e.target.value)}\n            className=\"p-2 text-black \"\n            id=\"specialite\"\n            name=\"specialite\"\n            required\n          >\n            <option value=\"none\" selected disabled hidden>\n              -------Sélectionner----------\n            </option>\n            <option value=\"anglais\">Anglais</option>\n            <option value=\"informatique\">Informatique</option>\n            <option value=\"biologie\">Biologie</option>\n            <option value=\"commerce\">commerce</option>\n            <option value=\"droit\">Droit</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"relative  min-h-screen \">\n        <div className=\"grid gap-3 grid-cols-1 sm:grid-cols-1 lg:grid-cols-2\">\n          {docs ? (\n            docs.map((doc) => (\n              <Viewer\n                key={doc.sujet_id}\n                id={doc.sujet_id}\n                Doc={`https://questpaper-subjects.s3.eu-west-3.amazonaws.com/${doc.nom_sujet}`}\n              />\n            ))\n          ) : (\n            <h1>No data found</h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Secondary;\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Viewer.js",[],"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Prodata.js",["134","135","136"],"import React,{useState, useEffect} from 'react'\nimport { decodeToken } from 'react-jwt'\nimport Loader from './Loader'\n\n\n\n\n\nconst Prodata = ({decodedToken}) => {\n\n\n\n    const [data, setData]=  useState()\n\n   useEffect(async() =>{\n     if(await decodedToken){\n       console.log(await decodeToken)\n     }\n        //  setData(await decodedToken)\n   },[decodeToken])\n\n    return (\n      decodeToken?<Loader/> :\n        <div className=\"h-screen flex flex-col p-4\">\n        <div className=\"flex flex-col text-3xl p-3 items-center  justify-center border-2\">\n          <h1>Profile</h1>\n        </div>\n        <div className=\"flex   border-2 h-full\">\n          <div className=\"flex-1 text-center flex-col h-full \">\n            <div>\n              {console.log(data)}\n            </div>\n            <div>\n              <h1>Membership</h1>\n              <input type=\"toggle\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    )\n}\n\nexport default Prodata\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/Loader.js",[],"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/features/Token.js",[],"/Users/carnelmegbleto/Desktop/questpaper/frontend/src/Pages/Membership.js",["137","138","139","140"],"import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\n\nconst Membership = () => {\n\n  const [url, seturl] = useState()\n\nconst getPlan =(id) =>{\n   axios.post('http://localhost:5000/api/user/payer', {\"value\": id}).then((res) => \n  {if(res.status == 200){\n     const url = res.data.url\n    // console.log(url)\n  window.location =  `https://checkout.stripe.com/pay/${url}`\n  }\n  }).catch(error => console.log(error.message))}\n\n    return (\n        <div className=\"min-h-screen\">\n            <div className=\"min-h-screen grid grid-cols-1 sm:grid-cols-2 items-center justify-items-center p-4  \">\n\n              <div className=\"flex m-1 flex-col shadow-sm p-3 border-solid border-4 w-2/4 justify-evenly min-h-1/2 text-center\">\n                <h1 className=\"text-3xl p-1 font-bold \">1 Mois</h1>\n                <h1 className=\"text-green-800 text-xl p-1\">20 €</h1>\n                <p className=\"p-2\">Acces illimite au sujets ainsi que leurs corrections</p>\n                <button onClick = {e => getPlan(1)} className=\"bg-green-300 p-2 font-bold cursor-pointer hover:bg-green-100\">Souscrire</button>\n              </div>\n\n              <div className=\"flex m-1 flex-col shadow-sm p-3 border-solid border-4 w-2/4 justify-evenly min-h-1/2 text-center\">\n                <h1 className=\"text-3xl p-1 font-bold \">3 Mois</h1>\n                <h1 className=\"text-green-800 text-xl p-1\">70€</h1>\n                <p className=\"p-2\">Acces illimite au sujets ainsi que leurs corrections</p>\n                <button onClick = {e => getPlan(2)} className=\"bg-green-300 p-2 font-bold cursor-pointer hover:bg-green-100\">Souscrire</button>\n              </div>\n\n\n             \n              <div className=\"flex m-1 flex-col shadow-sm p-3 border-solid border-4 w-2/4 justify-evenly min-h-1/2 text-center\">\n                <h1 className=\"text-3xl p-1 font-bold \">6 Mois</h1>\n                <h1 className=\"text-green-800 text-xl p-1\">120€</h1>\n                <p className=\"p-2\">Acces illimite au sujets ainsi que leurs corrections</p>\n                <button onClick = {e => getPlan(3)} className=\"bg-green-300 p-2 font-bold cursor-pointer hover:bg-green-100\">Souscrire</button>\n              </div>\n\n\n             \n              <div className=\"flex m-1 flex-col bg-gray-600 text-white p-3 border-solid border-4 w-2/4 justify-evenly min-h-1/2 text-center\">\n                <h1 className=\"text-3xl p-1 font-bold \">1 Ans</h1>\n                <h1 className=\"text-red-800 text-xl p-1\">200€</h1>\n                <p className=\"p-2\">Acces illimite au sujets ainsi que leurs corrections</p>\n                <button onClick={e => getPlan(4)} className=\"bg-green-300 p-2 font-bold cursor-pointer hover:bg-green-100\">Souscrire</button>\n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Membership\n","/Users/carnelmegbleto/Desktop/questpaper/frontend/src/components/CardForm.js",["141"],"import React from \"react\";\nimport { useStripe, useElements,  PaymentElement } from \"@stripe/react-stripe-js\";\n\nconst CardForm = () => {\n    const stripe = useStripe();\n    const elements = useElements();\n  \n    const handleSubmit = async (event) => {\n      // We don't want to let default form submission happen here,\n      // which would refresh the page.\n      event.preventDefault();\n  \n      if (!stripe || !elements) {\n        // Stripe.js has not yet loaded.\n        // Make sure to disable form submission until Stripe.js has loaded.\n        return;\n      }\n  \n      const result = await stripe.confirmPayment({\n        //`Elements` instance that was used to create the Payment Element\n        elements,\n        confirmParams: {\n          return_url: \"https://my-site.com/order/123/complete\",\n        },\n      });\n  \n      if (result.error) {\n        // Show error to your customer (e.g., payment details incomplete)\n        console.log(result.error.message);\n      } else {\n        // Your customer will be redirected to your `return_url`. For some payment\n        // methods like iDEAL, your customer will be redirected to an intermediate\n        // site first to authorize the payment, then redirected to the `return_url`.\n      }\n    };\n  \n  return (\n    <form>\n      <PaymentElement />\n      <button>Submit</button>\n    </form>\n  );\n};\n\nexport default CardForm;\n",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":37,"column":4,"nodeType":"148","endLine":37,"endColumn":6,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":13},{"ruleId":"150","severity":1,"message":"154","line":16,"column":11,"nodeType":"152","messageId":"153","endLine":16,"endColumn":16},{"ruleId":"146","severity":1,"message":"155","line":66,"column":6,"nodeType":"148","endLine":66,"endColumn":17,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":42,"column":29,"nodeType":"159","messageId":"160","endLine":42,"endColumn":31},{"ruleId":"146","severity":1,"message":"161","line":51,"column":6,"nodeType":"148","endLine":51,"endColumn":16,"suggestions":"162"},{"ruleId":"150","severity":1,"message":"163","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"164","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":21},{"ruleId":"146","severity":1,"message":"165","line":13,"column":13,"nodeType":"166","endLine":20,"endColumn":4},{"ruleId":"146","severity":1,"message":"167","line":20,"column":6,"nodeType":"148","endLine":20,"endColumn":13,"suggestions":"168"},{"ruleId":"150","severity":1,"message":"169","line":13,"column":7,"nodeType":"152","messageId":"153","endLine":13,"endColumn":14},{"ruleId":"150","severity":1,"message":"170","line":39,"column":25,"nodeType":"152","messageId":"153","endLine":39,"endColumn":34},{"ruleId":"171","severity":1,"message":"172","line":53,"column":20,"nodeType":"173","messageId":"174","endLine":53,"endColumn":33},{"ruleId":"175","severity":1,"message":"176","line":58,"column":7,"nodeType":"177","messageId":"178","endLine":63,"endColumn":43},{"ruleId":"179","severity":1,"message":"180","line":58,"column":7,"nodeType":"152","messageId":"181","endLine":58,"endColumn":12},{"ruleId":"146","severity":1,"message":"165","line":76,"column":13,"nodeType":"166","endLine":103,"endColumn":4},{"ruleId":"150","severity":1,"message":"182","line":79,"column":29,"nodeType":"152","messageId":"153","endLine":79,"endColumn":38},{"ruleId":"150","severity":1,"message":"183","line":79,"column":40,"nodeType":"152","messageId":"153","endLine":79,"endColumn":52},{"ruleId":"146","severity":1,"message":"184","line":103,"column":6,"nodeType":"148","endLine":103,"endColumn":18,"suggestions":"185"},{"ruleId":"150","severity":1,"message":"186","line":11,"column":35,"nodeType":"152","messageId":"153","endLine":11,"endColumn":40},{"ruleId":"150","severity":1,"message":"187","line":11,"column":55,"nodeType":"152","messageId":"153","endLine":11,"endColumn":61},{"ruleId":"146","severity":1,"message":"188","line":31,"column":6,"nodeType":"148","endLine":31,"endColumn":14,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":51,"column":67,"nodeType":"192","messageId":"193","endLine":51,"endColumn":163,"fix":"194"},{"ruleId":"195","severity":1,"message":"196","line":4,"column":26,"nodeType":"197","messageId":"198","endLine":4,"endColumn":40,"fix":"199"},{"ruleId":"150","severity":1,"message":"200","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":11},{"ruleId":"146","severity":1,"message":"201","line":62,"column":6,"nodeType":"148","endLine":62,"endColumn":21,"suggestions":"202"},{"ruleId":"146","severity":1,"message":"203","line":68,"column":6,"nodeType":"148","endLine":68,"endColumn":8,"suggestions":"204"},{"ruleId":"146","severity":1,"message":"205","line":72,"column":6,"nodeType":"148","endLine":72,"endColumn":15,"suggestions":"206"},{"ruleId":"146","severity":1,"message":"207","line":76,"column":6,"nodeType":"148","endLine":76,"endColumn":12,"suggestions":"208"},{"ruleId":"150","severity":1,"message":"209","line":13,"column":18,"nodeType":"152","messageId":"153","endLine":13,"endColumn":25},{"ruleId":"146","severity":1,"message":"165","line":15,"column":14,"nodeType":"166","endLine":20,"endColumn":5},{"ruleId":"146","severity":1,"message":"210","line":20,"column":6,"nodeType":"148","endLine":20,"endColumn":19,"suggestions":"211"},{"ruleId":"150","severity":1,"message":"212","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"213","line":6,"column":10,"nodeType":"152","messageId":"153","endLine":6,"endColumn":13},{"ruleId":"150","severity":1,"message":"214","line":6,"column":15,"nodeType":"152","messageId":"153","endLine":6,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":10,"column":18,"nodeType":"159","messageId":"160","endLine":10,"endColumn":20},{"ruleId":"150","severity":1,"message":"215","line":8,"column":11,"nodeType":"152","messageId":"153","endLine":8,"endColumn":23},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["218"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postLoginData'. Either include it or remove the dependency array.",["219"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'postData'. Either include it or remove the dependency array.",["220"],"'useState' is defined but never used.","'useSelector' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'mydecodedtoken'. Either include it or remove the dependency array.",["221"],"'history' is assigned a value but never used.","'isExpired' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'https:' is defined but never used.","unused","'user_name' is assigned a value but never used.","'user_sirname' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'decodedToken.data', 'file', 'filename', 'level', 'sendData', and 'specialite'. Either include them or remove the dependency array.",["222"],"'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["223"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"224","text":"225"},"no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"226","text":"227"},"'Doc' is defined but never used.","React Hook useEffect has a missing dependency: 'getdocs'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has missing dependencies: 'domaine' and 'year'. Either include them or remove the dependency array.",["229"],"React Hook useEffect has a missing dependency: 'getBydomaine'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has a missing dependency: 'getByYear'. Either include it or remove the dependency array.",["231"],"'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'decodedToken'. Either include it or remove the dependency array. Outer scope values like 'decodeToken' aren't valid dependencies because mutating them doesn't re-render the component.",["232"],"'useEffect' is defined but never used.","'url' is assigned a value but never used.","'seturl' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},[2060,2060]," rel=\"noreferrer\"",[101,115],"isAuth",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [dispatch, history, location.pathname]",{"range":"255","text":"256"},"Update the dependencies array to be: [logindata, postLoginData]",{"range":"257","text":"258"},"Update the dependencies array to be: [postData, userData]",{"range":"259","text":"260"},"Update the dependencies array to be: [mydecodedtoken, token]",{"range":"261","text":"262"},"Update the dependencies array to be: [decodedToken.data, donneeform, file, filename, level, sendData, specialite]",{"range":"263","text":"264"},"Update the dependencies array to be: [getData, search]",{"range":"265","text":"266"},"Update the dependencies array to be: [year, domaine, getdocs]",{"range":"267","text":"268"},"Update the dependencies array to be: [domaine, year]",{"range":"269","text":"270"},"Update the dependencies array to be: [domaine, getBydomaine]",{"range":"271","text":"272"},"Update the dependencies array to be: [getByYear, year]",{"range":"273","text":"274"},"Update the dependencies array to be: [decodedToken]",{"range":"275","text":"276"},[1162,1164],"[dispatch, history, location.pathname]",[1891,1902],"[logindata, postLoginData]",[1262,1272],"[postData, userData]",[405,412],"[mydecodedtoken, token]",[2618,2630],"[decodedToken.data, donneeform, file, filename, level, sendData, specialite]",[859,867],"[getData, search]",[1461,1476],"[year, domaine, getdocs]",[1560,1562],"[domaine, year]",[1611,1620],"[domaine, getBydomaine]",[1666,1672],"[getByYear, year]",[348,361],"[decodedToken]"]